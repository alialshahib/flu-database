<%#
Various tags to be used across a variety of models & pages.
%>

<%#
An extended tag for showing gravatar images

While DRYML supplies a gravatar image out of the box, it doesn't allow for
several gravatar options. This local version allows the setting of alternative
images (an url to an image file or the name of a Gravatar default image) and
the setting of an image extension.

@param [url or string] altimg   url or name of image to use if no avatar found
@param [string] ext             extension of image type to return
@param [email] email_address    address to render avatar for

TODO: allow other gravatar options?
TODO: neater option merging (hash & join)?
NOTE: hobo bitched about "email_address" below until I changed it to "address".
%>

<def tag="ex-gravatar" attrs="size, rating, altimg, ext, address">
  <%
	 size ||= 80;
	 rating ||= 'g';
	 altimg ||= 'mm';
	 altimg = CGI::escape(altimg);
	 ext ||= '';
	 digest = Digest::MD5.hexdigest(address || this.email_address);
  -%>
  <a class="gravatar">
	 <img class="gravatar"
		src="http://www.gravatar.com/avatar/#{digest}#{ext}?s=#{size}&r=#{rating}&d=#{altimg}"
			merge-attrs/>
  </a>
</def>


<extend tag="input" for="date"> <!--The <extend> tag is used to extend any tag that.s already defined. The body of <extend> is our new definition. It.s very common to want to base the new definition on the old one, for example, we often want to insert a bit of extra content as we.ve done here. We can do that by calling the .old. definition, which is available as <old-card> -->
   <old-input merge include-blank="&true" order="day,month,year" />
</extend>



<!--
XXX: what is this shit?
-->
<def tag="messagex">
 <br/> <br/>
 <ul>
       <li param="msg1">Message 1</li>
       <li param="msg2">Message 2</li>
       <li param="msg3">Message 3</li>
 </ul>
</def>

<extend tag="messagex">
 <old-messagex merge>
      <msg2: param>Message 2 Extended</msg2:>
 </old-messagex>
</extend>